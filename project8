#inverted half pyramid using numbers
rows = 5
for i in range(0, rows +1):
    for j in range(rows -i, 0, -1):
        print(j,end=" ")
    print()
	
# right angled triangle pattern of numbers
rows =6
for i in range(1,rows):
    num =1
    for j in range(rows,0,-1):
        if j >i:
            print(" ", end=" ")
        else:
            print(num, end=" ")
            num = num+1
    print("")
#pattern 	
row_no = int(input("enter value"))
for row in range(1,row_no+1):
    for column in range(1,row+1):
        print("1",end=" ")
    print("")
# reverse pattern	
row_no = int(input("enter value "))
for row in range(row_no, 0, -1):
    for column in range(1,row+1):
        print("$",end="")
    print()

#combine pattern
row_no =  int(input("enter the rows value: "))
for row in range(1,row_no+1):
    for column in range(1, row+1):
        print("*", end=" ")
    print( )

for row in range(row_no-1,0,-1):
    for column in range(1, row+1):
        print("*", end=" ")
    print()
#to print row
row_no =  int(input("enter the rows value: "))
for row in range(1,row_no+1):
    for column in range(1, row+1):
        print(row, end=" ")
    print( )
#to print column
row_no =  int(input("enter the rows value: "))
for row in range(1,row_no+1):
    for column in range(1, row+1):
        print(column, end=" ")
    print( )
	
#using place holder
row_no =  int(input("enter the rows value: "))
for row in range(1,row_no+1):
    for column in range(1, row+1):
        print("{0}{1}".format(row,column), end=" ")
    print( )
	
#output
11 
21 22 
31 32 33 
41 42 43 44 
51 52 53 54 55 

# using alphabetic character
row_no =  int(input("enter the rows value: "))
ch = 65
for row in range(1,row_no+1):
    for column in range(1, row+1):
        print("{0}".format(chr(ch)), end=" ")
    print( )
#output
A 
A A 
A A A 
A A A A 
A A A A A 
	
row_no =  int(input("enter the rows value: "))
ch = 64
for row in range(1,row_no+1):
    for column in range(1, row+1):
        print("{0}".format(chr(ch+column)), end=" ")
    print( )
#output
A 
A B 
A B C 
A B C D 
A B C D E

row_no =  int(input("enter the rows value: "))
ch = 64
for row in range(1,row_no+1):
    for column in range(1, row+1):
        print("{0}".format(chr(ch+column)), end=" ")
    print( )

for row in range(row_no-1,0,-1):
    for column in range(1, row+1):
        print("{0}".format(chr(ch+column)), end=" ")
    print()
#output
enter the rows value: 5
A 
A B 
A B C 
A B C D 
A B C D E 
A B C D 
A B C 
A B 
A 

row_no =  int(input("enter the rows value: "))
ch = 64
for row in range(1,row_no+1):
    for column in range(1, row+1):
        print("{0}".format(chr(ch+row)), end=" ")
    print( )

for row in range(row_no-1,0,-1):
    for column in range(1, row+1):
        print("{0}".format(chr(ch+row)), end=" ")
    print()
	
#output
enter the rows value: 5
A 
B B 
C C C 
D D D D 
E E E E E 
D D D D 
C C C 
B B 
A 

row_no =  int(input("enter the rows value: "))
ch = 64
for row in range(1,row_no+1):
    for column in range(1, row+1):
        ch = ch+1
        print("{0}".format(chr(ch)), end=" ")
    print( )

for row in range(row_no-1,0,-1):
    for column in range(1, row+1):
        ch = ch+1
        print("{0}".format(chr(ch)), end=" ")
    print()
#output
enter the rows value: 5
A 
B C 
D E F 
G H I J 
K L M N O 
P Q R S 
T U V 
W X 
Y 

row_no =  int(input("enter the rows value: "))
sum = 0
for row in range(1,row_no+1):
    for column in range(1, row+1):
        sum = sum + 1
        print("{0}".format(sum), end=" ")
    print( )
#output
enter the rows value: 5
1 
2 3 
4 5 6 
7 8 9 10 
11 12 13 14 15 

row_no =  int(input("enter the rows value: "))
sum = 0
for row in range(1,row_no+1):
    for column in range(1, row+1):
        sum = sum + 1
        print("{:02d}".format(sum), end=" ")
    print( )
#output
enter the rows value: 5
01 
02 03 
04 05 06 
07 08 09 10 
11 12 13 14 15

row_no =  int(input("enter the rows value: "))
sum = 0
for row in range(1,row_no+1):
    for column in range(1, row+1):
        sum = sum + 1
        print("{:2d}".format(sum), end=" ")
    print( )
#output
enter the rows value: 5
 1 
 2  3 
 4  5  6 
 7  8  9 10 
11 12 13 14 15 
